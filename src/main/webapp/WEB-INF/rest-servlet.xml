<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">


       <context:component-scan base-package="controllers"/>
       <context:component-scan base-package="services"/>
       <context:component-scan base-package="model"/>
       <context:component-scan base-package="model.repositories"/>

       <mvc:annotation-driven/>

       <!--access to static resource (ex. javascript files)-->
       <mvc:resources mapping="/resources/**" location="/WEB-INF/resources/"/>

       <!-- entity manager-->
       <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
              <property name="jpaVendorAdapter">
                     <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
              </property>
              <property name="persistenceUnitManager" ref="persistenceUnitManager"/>
              <property name="persistenceUnitName" value="org.hibernate.tutorial.jpa"/>
              <property name="persistenceXmlLocation" value="classpath*:META-INF/persistence.xml" />
              <property name="persistenceProvider">
                     <bean class="org.hibernate.jpa.HibernatePersistenceProvider" />
              </property>
              <property name="jpaProperties" ref="jpaProperties" />
              <property name="dataSource" ref="dataSource"/>
       </bean>

       <bean id="persistenceUnitManager" class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
              <property name="persistenceXmlLocation" value="classpath*:META-INF/persistence.xml"/>
              <property name="defaultDataSource" ref="dataSource"/>
              <property name="dataSources">
                     <map>
                            <entry key="local" value-ref="dataSource"/>
                     </map>
              </property>
       </bean>

       <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
              <property name="entityManagerFactory" ref="entityManagerFactory"/>
       </bean>

       <tx:annotation-driven transaction-manager="transactionManager" />

       <bean id="dataSource" class="org.springframework.jdbc.datasource.SingleConnectionDataSource">
              <property name="driverClassName" value="org.h2.Driver"/>
              <property name="url" value="jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE"/>
              <property name="username" value="sa"/>
              <property name="password" value=""/>
              <property name="suppressClose" value="true"/>
       </bean>
       <util:properties id="jpaProperties">
              <!--<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>-->
              <!--<prop key="hibernate.connection.isolation">2</prop>-->
              <!--<prop key="hibernate.query.substitiutions">true=1,false=0</prop>-->
              <!--<prop key="hibernate.default_batch_fetch_size">100</prop>-->
              <prop key="hibernate.show_sql">true</prop>
              <prop key="hibernate.hbm2ddl.auto">create</prop>
       </util:properties>

       <!-- -->
       <jpa:repositories base-package="model.repositories"/>
</beans>